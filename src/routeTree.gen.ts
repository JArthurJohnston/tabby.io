/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as CompositionsRouteRouteImport } from './routes/compositions.route'
import { Route as ComposerRouteRouteImport } from './routes/composer.route'
import { Route as Abc_composerRouteRouteImport } from './routes/abc_composer.route'
import { Route as IndexRouteRouteImport } from './routes/index.route'

const CompositionsRouteRoute = CompositionsRouteRouteImport.update({
  id: '/compositions',
  path: '/compositions',
  getParentRoute: () => rootRouteImport,
} as any)
const ComposerRouteRoute = ComposerRouteRouteImport.update({
  id: '/composer',
  path: '/composer',
  getParentRoute: () => rootRouteImport,
} as any)
const Abc_composerRouteRoute = Abc_composerRouteRouteImport.update({
  id: '/abc_composer',
  path: '/abc_composer',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRouteRoute = IndexRouteRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRouteRoute
  '/abc_composer': typeof Abc_composerRouteRoute
  '/composer': typeof ComposerRouteRoute
  '/compositions': typeof CompositionsRouteRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRouteRoute
  '/abc_composer': typeof Abc_composerRouteRoute
  '/composer': typeof ComposerRouteRoute
  '/compositions': typeof CompositionsRouteRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRouteRoute
  '/abc_composer': typeof Abc_composerRouteRoute
  '/composer': typeof ComposerRouteRoute
  '/compositions': typeof CompositionsRouteRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/abc_composer' | '/composer' | '/compositions'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/abc_composer' | '/composer' | '/compositions'
  id: '__root__' | '/' | '/abc_composer' | '/composer' | '/compositions'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRouteRoute: typeof IndexRouteRoute
  Abc_composerRouteRoute: typeof Abc_composerRouteRoute
  ComposerRouteRoute: typeof ComposerRouteRoute
  CompositionsRouteRoute: typeof CompositionsRouteRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/compositions': {
      id: '/compositions'
      path: '/compositions'
      fullPath: '/compositions'
      preLoaderRoute: typeof CompositionsRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/composer': {
      id: '/composer'
      path: '/composer'
      fullPath: '/composer'
      preLoaderRoute: typeof ComposerRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/abc_composer': {
      id: '/abc_composer'
      path: '/abc_composer'
      fullPath: '/abc_composer'
      preLoaderRoute: typeof Abc_composerRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRouteRoute: IndexRouteRoute,
  Abc_composerRouteRoute: Abc_composerRouteRoute,
  ComposerRouteRoute: ComposerRouteRoute,
  CompositionsRouteRoute: CompositionsRouteRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
